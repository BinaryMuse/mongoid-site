- content_for :head do
  %title Mongoid: Persistence [Safe Mode]

%h1 safe mode

%p
  For cases when you want to persist with or without safe mode on a per-query
  basis you can use Mongoid's provided <tt>#safely</tt> and <tt>#unsafely</tt>
  methods. These can be prepended to any persistence operation Mongoid
  provides.

%h2 persisting in safe mode

%p
  When you are using the default configuration settings and Mongoid's
  <tt>persist_in_safe_mode</tt> option is false, you may persist a single
  operation in safe mode by overriding it with <tt>#safely</tt>.

%p
  Using safely, you can have the following options:

%ul
  %li <tt>fsync</tt>: Whether to perform an fsync.
  %li <tt>w</tt>: The number of nodes to write to before returning.
  %li <tt>wtimeout</tt>: The timeout value for writing to multiple nodes.

:coderay
  #!ruby
  Person.safely.create(name: "Bond")
  Person.safely(w: 3).create!(name: "James")
  person.safely.save
  person.safely(fsync: true).save!
  person.safely(w: 2, wtimeout: 5000).update_attributes(title: "Sir")
  person.safely.update_attributes!(title: "Madam")

%h2 persisting without safe mode

%p
  When you override the default configuration settings and Mongoid's
  <tt>persist_in_safe_mode</tt> option is true, you may persist a single
  operation without safe mode by overriding it with <tt>#unsafely</tt>.

:coderay
  #!ruby
  Person.unsafely.create(name: "Bond")
  Person.unsafely.create!(name: "James")
  person.unsafely.save
  person.unsafely.save!
  person.unsafely.update_attributes(title: "Sir")
  person.unsafely.update_attributes!(title: "Madam")
