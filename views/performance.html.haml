- content_for :head do
  %title Mongoid: Performance

%h1 performance

%p
  Performance numbers are recorded for each release as of 2.0.0 and
  displayed here. The data used in the metrics is that of what would
  be considered a fairly standard application in MongoDB that Mongoid
  could manage.

  %ul
    %li 1,000,000 documents in the main collection
    %li 10,000 embedded documents on a root document (1-n)
    %li 10,000 embedded documents on a root document (1-1)
    %li 100,000 referenced documents to another collection (1-n)
    %li 100,000 referenced documents to another collection (1-1)
    %li 100,000 referenced documents to another collection (n-n)

%p.italic
  * Performance metrics done on a 2.4 GHz i5 MacBook Pro / 4GB RAM,
  OSX 10.7, Mongoid 2.1.0

%p.italic
  * The script to run the performance metrics can be found
  <a href="https://github.com/mongoid/mongoid/blob/master/perf/benchmark.rb">here</a>.

%table.performance
  %tr
    %td.header{ colspan: 3 } root (1,000,000 operations)
  %tr
    %td.green
      .op Model#create
      .time [ 480.870 ]
      .rate [ 2,079/sec ]
  %tr
    %td.green
      .op Model#all.each
      .time [ 52.318 ]
      .rate [ 19,114/sec ]
  %tr
    %td.green
      .op Model#find
      .time [ 0.001 ]
      .rate
  %tr
    %td.green
      .op Model#save
      .time [ 554.206 ]
      .rate [ 1,804/sec ]
  %tr
    %td.green
      .op Model#update_attribute
      .time [ 401.765 ]
      .rate [ 2,489/sec ]

%table.performance
  %tr
    %td.header{ colspan: 3 } embedded 1-n (10,000 operations)
  %tr
    %td.green
      .op relation#build
      .time [ 2.655 ]
      .rate [ 3,766/sec ]
  %tr
    %td.red
      .op relation#clear
      .time [ 241.299 ]
      .rate [  ]
  %tr
    %td.green
      .op relation#create
      .time [ 6.997 ]
      .rate [ 1,429/sec ]
  %tr
    %td.green
      .op relation#count
      .time [ 0.017 ]
      .rate
  %tr
    %td.green
      .op relation#delete_all
      .time [ 1.482 ]
      .rate [ 6,747/sec ]
  %tr
    %td.green
      .op relation#push (batch)
      .time [ 4.054 ]
      .rate [ 2,466/sec ]
  %tr
    %td.green
      .op relation#each
      .time [ 0.001 ]
      .rate [ 10,000,000/sec ]
  %tr
    %td.green
      .op relation#find
      .time [ 0.069 ]
      .rate
  %tr
    %td.green
      .op relation#delete
      .time [ 0.065 ]
      .rate

%table.performance
  %tr
    %td.header{ colspan: 3 } embedded 1-1 (10,000 operations)
  %tr
    %td.green
      .op relation#=
      .time [ 4.539 ]
      .rate [ 2,203/sec ]

%table.performance
  %tr
    %td.header{ colspan: 3 } relational 1-n (100,000 operations)
  %tr
    %td.green
      .op relation#build
      .time [ 21.225 ]
      .rate [ 4,711/sec ]
  %tr
    %td.green
      .op relation#clear
      .time [ 5.289 ]
      .rate [ 18,907/sec ]
  %tr
    %td.yellow
      .op relation#create
      .time [ 59.970 ]
      .rate [ 1,667/sec ]
  %tr
    %td.green
      .op relation#count
      .time [ 0.057 ]
      .rate
  %tr
    %td.green
      .op relation#delete_all
      .time [ 6.897 ]
      .rate [ 14,499/sec ]
  %tr
    %td.green
      .op relation#push (batch)
      .time [ 44.710 ]
      .rate [ 2,236/sec ]
  %tr
    %td.green
      .op relation#each
      .time [ 0.089 ]
      .rate [ 1,123,595/sec ]
  %tr
    %td.green
      .op relation#find
      .time [ 1.326 ]
      .rate
  %tr
    %td.green
      .op relation#delete
      .time [ 0.569 ]
      .rate

%table.performance
  %tr
    %td.header{ colspan: 3 } relational 1-1 (100,000 operations)
  %tr
    %td.green
      .op relation#=
      .time [ 43.719 ]
      .rate [ 2,287/sec ]

%table.performance
  %tr
    %td.header{ colspan: 3 } relational n-n (100,000 operations)
  %tr
    %td.red
      .op relation#build
      .time [ 200.528 ]
      .rate [ 498/sec ]
  %tr
    %td.yellow
      .op relation#clear
      .time [ 98.204 ]
      .rate [ 1,018/sec ]
  %tr
    %td.green
      .op relation#count
      .time [ 0.001 ]
      .rate
  %tr
    %td.green
      .op relation#delete_all
      .time [ 0.001 ]
      .rate [ 100,000,000/sec ]
  %tr
    %td.green
      .op relation#push (batch)
      .time [ 31.881 ]
      .rate [ 3,136/sec ]
  %tr
    %td.green
      .op relation#each
      .time [ 0.089 ]
      .rate [ 1,123,595/sec ]
  %tr
    %td.green
      .op relation#find
      .time [ 2.755 ]
      .rate
  %tr
    %td.green
      .op relation#delete
      .time [ 0.822 ]
      .rate
